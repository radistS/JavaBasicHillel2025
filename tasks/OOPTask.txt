1. Вступ до ООП
Задача 1:
Створіть клас Person, що містить name (ім'я) і age (вік). Створіть кілька об'єктів цього класу та виведіть їхні дані.

Задача 2:
Реалізуйте клас Car із полями brand, model, year. Додайте метод displayInfo(), який виводить інформацію про авто.

Задача 3:
Створіть клас Book з полями title, author, year. Напишіть метод printDetails(), що виводить інформацію про книгу.

Задача 4:
Реалізуйте клас Rectangle з полями width та height. Напишіть методи calculateArea() і calculatePerimeter().

Задача 5:
Напишіть клас Student, що містить ім'я та середній бал. Додайте метод, який виводить повідомлення про статус студента ("відмінник", "хорошист", "трійочник" тощо).

Задача 6:
v
Задача 7:
Напишіть клас TemperatureConverter із методами celsiusToFahrenheit() та fahrenheitToCelsius(), які конвертують температуру.

Задача 8:
Створіть клас Triangle з полями a, b, c (довжини сторін). Напишіть метод isValid(), що перевіряє, чи може трикутник існувати.

2. Принципи ООП
Задача 9 (Інкапсуляція):
Створіть клас BankAccount із закритими полями balance. Додайте методи deposit() і withdraw(), які дозволяють змінювати баланс з урахуванням перевірки.

Задача 10 (Наслідування):
Реалізуйте клас Animal із методом makeSound(). Створіть класи Dog та Cat, які успадковують Animal та перевизначають метод makeSound().

Задача 11 (Поліморфізм):
Створіть клас Shape з методом calculateArea(). Реалізуйте підкласи Circle і Rectangle, які перевизначають цей метод для розрахунку площі.

Задача 12 (Абстракція):
Реалізуйте абстрактний клас Transport з методом move(). Створіть класи Car та Bike, які успадковують Transport та реалізують move().

Задача 13 (Композиція):
Створіть клас Engine, що містить поле power. Додайте клас Car, який містить об'єкт Engine і метод getEnginePower().

Задача 14:
Створіть клас Account із закритим паролем. Додайте методи setPassword() і checkPassword(), щоб користувач міг змінювати й перевіряти пароль.

Задача 15:
Реалізуйте клас Animal, який має метод eat(). Створіть клас Bird, який успадковує Animal і додає метод fly().

Задача 16:
Напишіть клас Library з методом addBook(Book book), що додає книгу до списку бібліотеки.

3. Поняття класу та об'єкта
Задача 17:
Створіть клас Laptop із полями brand, ram, price. Напишіть конструктор для ініціалізації об'єкта.

Задача 18:
Реалізуйте клас Movie з полями title, director, year. Створіть кілька об'єктів та виведіть інформацію про фільми.

Задача 19:
Напишіть клас User, що містить username і password. Реалізуйте метод для перевірки введеного пароля.

Задача 20:
Створіть клас Phone з методами call() і sendMessage(), які приймають номер телефону.

Задача 21:
Розробіть клас Point (координати x, y). Додайте метод distanceTo(Point other), який обчислює відстань між двома точками.

Задача 22:
Створіть клас Calculator із методами add(), subtract(), multiply(), divide().

Задача 23:
Напишіть клас Order, що містить список продуктів. Реалізуйте метод calculateTotalPrice().

Задача 24:
Розробіть клас Song із полями title, artist, duration. Додайте метод play(), який виводить повідомлення "Грає [title] від [artist]".

4. Конструктори
Задача 25:
Створіть клас Person із двома конструкторами: один приймає ім'я, другий — ім'я та вік.

Задача 26:
Реалізуйте клас BankAccount з конструктором, який приймає початковий баланс.

Задача 27:
Напишіть клас Book з трьома конструкторами: порожнім, з назвою, з назвою та автором.

Задача 28:
Створіть клас Computer, що містить конструктор, який приймає марку та обсяг оперативної пам'яті.

Задача 29:
Напишіть клас Ticket для квитків у кіно, що містить конструктор для ініціалізації ціни та місця.

Задача 30:
Створіть клас Team, який містить список гравців. Конструктор повинен приймати масив імен гравців.

Задача 31:
Напишіть клас Train, що містить кількість вагонів та місткість кожного вагона. Додайте метод для підрахунку загальної місткості.

5. Клас Object
Задача 32:
Перевизначте метод toString() у класі Product, щоб повертати рядкове представлення товару.

Задача 33:
Реалізуйте два об'єкти класу Person та порівняйте їх за допомогою equals(), перевизначивши цей метод.

Задача 34:
Створіть клас Car і перевизначте метод hashCode().

Задача 35:
Реалізуйте клас Employee, перевизначте метод clone(), щоб створювати копію об'єкта.

Задача 36:
Створіть клас Customer і перевизначте toString() та equals().

Задача 37:
Напишіть клас Person із полями name та age. Перевизначте hashCode(), щоб уникнути однакових значень для різних об'єктів.

Задача 38:
Реалізуйте метод equals() у класі Rectangle, щоб об'єкти вважалися рівними, якщо їхні ширина та висота співпадають.

Задача 39:
Створіть клас Order і перевизначте clone(), щоб створювати копії замовлень.

Задача 40:
Реалізуйте клас Book, що реалізує Comparable, щоб книги можна було сортувати за роком видання.